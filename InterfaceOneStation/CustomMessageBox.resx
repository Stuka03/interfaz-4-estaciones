<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FgAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>